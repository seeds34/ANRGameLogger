
//    private final String LOGGED_GAMES_DDL = "CREATE TABLE IF NOT EXISTS " + Tables.LOGGED_GAMES + " ( " + BaseColumns._ID + " INTEGER PRIMARY KEY AUTOINCREMENT,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + " INTEGER NOT NULL,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_ID + " INTEGER NOT NULL,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.DECK_ID + " INTEGER ," /*NOT NULL Removed so DECK_ID is no longer mandatory */
//            + LoggedGameOverviewsContract.LoggedGamesColumns.LOCATION_ID + " INTEGER,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.WIN_FLAG + " TEXT NOT NULL,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.SCORE + " INTEGER NOT NULL,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.WIN_TYPE + " TEXT NOT NULL,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYED_DATE + " TEXT,"
//            + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_SIDE + " TEXT,"
//            + "FOREIGN KEY("+LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_ID +") REFERENCES "+ Tables.PLAYERS +"("+BaseColumns._ID+")"
//            + "FOREIGN KEY("+LoggedGameOverviewsContract.LoggedGamesColumns.DECK_ID +") REFERENCES "+ Tables.DECKS +"("+BaseColumns._ID+")"
//            + "FOREIGN KEY("+LoggedGameOverviewsContract.LoggedGamesColumns.LOCATION_ID +") REFERENCES "+ Tables.LOCATIONS +"("+BaseColumns._ID+")"
//            + "CONSTRAINT game_player_unique UNIQUE("+LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + "," + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_ID   +"));";
//
//    private final String VIEW_SUB_SELECT_PLAYER_ONE = "SELECT "
//            + "L." + BaseColumns._ID + "  porowid, "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.GAME_ID + ", "
//            + "D." + DecksContract.DecksColumns.DECK_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_DECK_NAME + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.IDENTITY_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_ID_NAME + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.NRDB_CODE + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_NRDB_CODE + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.IMAGE_BIT_ARRAY + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_ID_IMAGE + ", "
//            + "P." + PlayersContract.PlayersColumns.PLAYER_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_NAME + ", "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.SCORE + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_SCORE + ", "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.WIN_FLAG + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_WIN_FLAG
//            + " FROM " + Tables.LOGGED_GAMES + " L "
//            + " INNER JOIN " + Tables.PLAYERS + " P ON P." + BaseColumns._ID + " = L." + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_ID
//            + " INNER JOIN " + Tables.DECKS + " D ON D." + BaseColumns._ID + " = L." + LoggedGameOverviewsContract.LoggedGamesColumns.DECK_ID
//            + " INNER JOIN " + Tables.IDENTITIES + " I ON I." + BaseColumns._ID + " = D." + DecksContract.DecksColumns.DECK_IDENTITY
//            + " WHERE L." + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_SIDE + " = 1";
//
//    private final String VIEW_SUB_SELECT_PLAYER_TWO = "SELECT "
//            + "L." + BaseColumns._ID + "  porowid, "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.GAME_ID + ", "
//            + "D." + DecksContract.DecksColumns.DECK_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_DECK_NAME + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.IDENTITY_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_ID_NAME + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.NRDB_CODE + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_NRDB_CODE + ", "
//            + "I." + IdentitiesContract.IdentitiesColumns.IMAGE_BIT_ARRAY + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_ID_IMAGE + ", "
//            + "P." + PlayersContract.PlayersColumns.PLAYER_NAME + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_NAME + ", "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.SCORE + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_SCORE + ", "
//            + "L." + LoggedGameOverviewsContract.LoggedGamesColumns.WIN_FLAG + " " + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_WIN_FLAG
//            + " FROM " + Tables.LOGGED_GAMES + " L "
//            + " INNER JOIN " + Tables.PLAYERS + " P ON P." + BaseColumns._ID + " = L." + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_ID
//            + " INNER JOIN " + Tables.DECKS + " D ON D." + BaseColumns._ID + " = L." + LoggedGameOverviewsContract.LoggedGamesColumns.DECK_ID
//            + " INNER JOIN " + Tables.IDENTITIES + " I ON I." + BaseColumns._ID + " = D." + DecksContract.DecksColumns.DECK_IDENTITY
//            + " WHERE L." + LoggedGameOverviewsContract.LoggedGamesColumns.PLAYER_SIDE + " = 2";
//
//    private final String VIEW_SUB_SELECT_SUMMARY = "SELECT "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID  + " " +  LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.GAME_ID + ", "
//            + "LO." +  LocationsContract.LocationsColumns.LOCATION_NAME + " " +  LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.LOCATION_NAME + ", "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.WIN_TYPE  + " " +  LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.WIN_TYPE + ", "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.PLAYED_DATE  + " " +  LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYED_DATE
//            + " FROM " + Tables.LOGGED_GAMES + " L "
//            + " INNER JOIN " + Tables.LOCATIONS + " LO ON LO." + BaseColumns._ID + " = " + " L." + LoggedGameOverviewsContract.LoggedGamesColumns.LOCATION_ID
//            + " GROUP BY "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID +  ", "
//            + "LO." +  LocationsContract.LocationsColumns.LOCATION_NAME + ", "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.WIN_TYPE + ", "
//            + "L." +  LoggedGameOverviewsContract.LoggedGamesColumns.PLAYED_DATE;

//   //TODO: Will need to support the indvidural Line IDs for LoggedGames table so I can update both lines when needed
//    private final String LOGGED_GAMES_FLAT_VIEW_DDL = "CREATE VIEW IF NOT EXISTS " + Views.LOGGED_GAMES_FLAT_VIEW + " AS SELECT "
//            + "su." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.GAME_ID + ", "
//            + "su." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.LOCATION_NAME + ", "
//            + "su." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYED_DATE + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_DECK_NAME + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_NAME + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_ID_NAME + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_ID_IMAGE + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_SCORE + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_WIN_FLAG + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_DECK_NAME + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_NAME + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_ID_NAME + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_ID_IMAGE + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_WIN_FLAG + ", "
//            + "su." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.WIN_TYPE + ", "
//            + "po." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_ONE_NRDB_CODE + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_NRDB_CODE + ", "
//            + "pt." + LoggedGamesFlatViewContract.LoggedGamesFlatViewContractColumns.PLAYER_TWO_SCORE
//            + " FROM "
//            + " (" + VIEW_SUB_SELECT_PLAYER_ONE + ") po, "
//            + " (" + VIEW_SUB_SELECT_PLAYER_TWO + ") pt, "
//            + " (" + VIEW_SUB_SELECT_SUMMARY + ") su "
//            + " WHERE po." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + " = pt." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID
//            + " AND po." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + " = su." + LoggedGameOverviewsContract.LoggedGamesColumns.GAME_ID + ";";
